<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="2" total="12" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-14T15:17:38 GMT-12:00" name="GroceryApplication" finished-at="2025-01-14T15:18:22 GMT-12:00" duration-ms="43899">
    <groups>
    </groups>
    <test started-at="2025-01-14T15:17:38 GMT-12:00" name="ChromeTest" finished-at="2025-01-14T15:18:18 GMT-12:00" duration-ms="40054">
      <class name="testCase.LoginPageTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:17:39 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:17:46 GMT-12:00" duration-ms="7678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="LoginWithValidCredential()[pri:1, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:17:46 GMT-12:00" name="LoginWithValidCredential" finished-at="2025-01-14T15:17:47 GMT-12:00" duration-ms="1050" status="SKIP">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Stream Closed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Stream Closed
at java.base/java.io.FileInputStream.available0(Native Method)
at java.base/java.io.FileInputStream.available(FileInputStream.java:415)
at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:132)
at java.base/java.io.PushbackInputStream.read(PushbackInputStream.java:182)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:106)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.fill(ZipArchiveInputStream.java:861)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readFromInflater(ZipArchiveInputStream.java:650)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readDeflated(ZipArchiveInputStream.java:625)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.read(ZipArchiveInputStream.java:528)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:132)
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.read(ZipArchiveThresholdInputStream.java:80)
at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:240)
at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:203)
at org.apache.poi.openxml4j.util.ZipArchiveFakeEntry.<init>(ZipArchiveFakeEntry.java:82)
at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:98)
at org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:132)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:319)
at org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:290)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:286)
at utilities.ExcelUtilities.readStringData(ExcelUtilities.java:21)
at testCase.BaseClass.groceryApplicationData(BaseClass.java:25)
at testCase.LoginPageTest.LoginWithValidCredential(LoginPageTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:17:47 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:17:48 GMT-12:00" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithValidCredential status=SKIP method=LoginPageTest.LoginWithValidCredential()[pri:1, instance:testCase.LoginPageTest@65fb9ffc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:17:48 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:17:52 GMT-12:00" duration-ms="4623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithValidCredential()[pri:1, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:17:52 GMT-12:00" name="LoginWithValidCredential" finished-at="2025-01-14T15:17:57 GMT-12:00" duration-ms="4333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:17:57 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:17:57 GMT-12:00" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithValidCredential status=SUCCESS method=LoginPageTest.LoginWithValidCredential()[pri:1, instance:testCase.LoginPageTest@65fb9ffc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:17:57 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:18:02 GMT-12:00" duration-ms="4662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:18:02 GMT-12:00" name="LoginWithInvalidCredential" data-provider="data-provider" finished-at="2025-01-14T15:18:03 GMT-12:00" duration-ms="1206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Benita]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:18:03 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:18:04 GMT-12:00" duration-ms="741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithInvalidCredential status=SUCCESS method=LoginPageTest.LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@65fb9ffc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:18:04 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:18:09 GMT-12:00" duration-ms="4975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:18:09 GMT-12:00" name="LoginWithInvalidCredential" data-provider="data-provider" finished-at="2025-01-14T15:18:10 GMT-12:00" duration-ms="928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Benita]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:18:10 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:18:11 GMT-12:00" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithInvalidCredential status=SUCCESS method=LoginPageTest.LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@65fb9ffc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:18:11 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:18:16 GMT-12:00" duration-ms="5098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:18:16 GMT-12:00" name="LoginWithInvalidCredential" data-provider="data-provider" finished-at="2025-01-14T15:18:17 GMT-12:00" duration-ms="1842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Benita]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[benita]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@65fb9ffc]" started-at="2025-01-14T15:18:17 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:18:18 GMT-12:00" duration-ms="794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithInvalidCredential status=SUCCESS method=LoginPageTest.LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@65fb9ffc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
      </class> <!-- testCase.LoginPageTest -->
    </test> <!-- ChromeTest -->
    <test started-at="2025-01-14T15:17:38 GMT-12:00" name="EdgeTest" finished-at="2025-01-14T15:18:22 GMT-12:00" duration-ms="43899">
      <class name="testCase.LoginPageTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:17:39 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:17:47 GMT-12:00" duration-ms="8044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="LoginWithValidCredential()[pri:1, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:17:47 GMT-12:00" name="LoginWithValidCredential" finished-at="2025-01-14T15:17:47 GMT-12:00" duration-ms="651" status="SKIP">
          <exception class="org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException">
            <message>
              <![CDATA[No valid entries or contents found, this is not a valid OOXML (Office Open XML) file]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException: No valid entries or contents found, this is not a valid OOXML (Office Open XML) file
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.getNextEntry(ZipArchiveThresholdInputStream.java:156)
at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:94)
at org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:132)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:319)
at org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:290)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:286)
at utilities.ExcelUtilities.readStringData(ExcelUtilities.java:21)
at testCase.BaseClass.groceryApplicationData(BaseClass.java:25)
at testCase.LoginPageTest.LoginWithValidCredential(LoginPageTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.util.zip.ZipException: Unexpected record signature: 0X0
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.getNextZipEntry(ZipArchiveInputStream.java:296)
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.getNextEntry(ZipArchiveThresholdInputStream.java:152)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:17:47 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:17:49 GMT-12:00" duration-ms="2153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithValidCredential status=SKIP method=LoginPageTest.LoginWithValidCredential()[pri:1, instance:testCase.LoginPageTest@510f3d34] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:17:49 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:17:54 GMT-12:00" duration-ms="4481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithValidCredential()[pri:1, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:17:54 GMT-12:00" name="LoginWithValidCredential" finished-at="2025-01-14T15:17:56 GMT-12:00" duration-ms="2215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:17:56 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:17:58 GMT-12:00" duration-ms="1728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithValidCredential status=SUCCESS method=LoginPageTest.LoginWithValidCredential()[pri:1, instance:testCase.LoginPageTest@510f3d34] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:17:58 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:18:04 GMT-12:00" duration-ms="5591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:18:04 GMT-12:00" name="LoginWithInvalidCredential" data-provider="data-provider" finished-at="2025-01-14T15:18:05 GMT-12:00" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Benita]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:18:05 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:18:06 GMT-12:00" duration-ms="1578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithInvalidCredential status=SUCCESS method=LoginPageTest.LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@510f3d34] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:18:06 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:18:11 GMT-12:00" duration-ms="4648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:18:11 GMT-12:00" name="LoginWithInvalidCredential" data-provider="data-provider" finished-at="2025-01-14T15:18:12 GMT-12:00" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Benita]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:18:12 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:18:15 GMT-12:00" duration-ms="2909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithInvalidCredential status=SUCCESS method=LoginPageTest.LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@510f3d34] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:18:15 GMT-12:00" name="beforeMethod" finished-at="2025-01-14T15:18:20 GMT-12:00" duration-ms="4850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:18:20 GMT-12:00" name="LoginWithInvalidCredential" data-provider="data-provider" finished-at="2025-01-14T15:18:21 GMT-12:00" duration-ms="881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Benita]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[benita]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidCredential -->
        <test-method is-config="true" signature="afterMethode(org.testng.ITestResult)[pri:0, instance:testCase.LoginPageTest@510f3d34]" started-at="2025-01-14T15:18:21 GMT-12:00" name="afterMethode" finished-at="2025-01-14T15:18:22 GMT-12:00" duration-ms="1481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithInvalidCredential status=SUCCESS method=LoginPageTest.LoginWithInvalidCredential(java.lang.String,java.lang.String)[pri:2, instance:testCase.LoginPageTest@510f3d34] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethode -->
      </class> <!-- testCase.LoginPageTest -->
    </test> <!-- EdgeTest -->
  </suite> <!-- GroceryApplication -->
</testng-results>
